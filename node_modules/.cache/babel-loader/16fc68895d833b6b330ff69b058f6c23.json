{"ast":null,"code":"var _jsxFileName = \"/Users/alenakim/Documents/GitHub/Companion/src/components/mood-list/MoodList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal'; // Styling\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport '../../styles/css/main.css';\n\nclass MoodList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userSession: Session.get('user'),\n      moods: {},\n      showAddModal: false,\n      showEditModal: false,\n      showDeleteModal: false,\n      moodSelected: '',\n      editValue: '',\n      addValue: '',\n      intensity: ''\n    };\n    this.onAddChange = this.onAddChange.bind(this);\n    this.onEditChange = this.onEditChange.bind(this);\n    this.submitAdd = this.submitAdd.bind(this);\n    this.submitEdit = this.submitEdit.bind(this);\n    this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n    this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n    this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n    this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n    this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n    this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n    this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n    this.handleOpenIntensityModal = this.handleOpenIntensityModal.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.userSession) {\n      axios.get('http://localhost:5000/get-moods', {\n        params: {\n          id: this.state.userSession['id']\n        },\n        withCredentials: true\n      }).then(res => this.setState({\n        moods: res.data.moods\n      }));\n    }\n  }\n\n  handleOpenAddModal() {\n    this.setState({\n      showAddModal: true\n    });\n  }\n\n  handleOpenEditModal(mood) {\n    this.setState({\n      showEditModal: true,\n      moodSelected: mood\n    });\n  }\n\n  handleOpenDeleteModal(mood) {\n    this.setState({\n      showDeleteModal: true,\n      moodSelected: mood\n    });\n  }\n\n  handleCloseAddModal() {\n    this.setState({\n      showAddModal: false\n    });\n  }\n\n  handleCloseEditModal() {\n    this.setState({\n      showEditModal: false\n    });\n  }\n\n  handleCloseDeleteModal() {\n    this.setState({\n      showDeleteModal: false\n    });\n  }\n\n  onAddChange(e) {\n    this.setState({\n      addValue: e.target.value\n    });\n  }\n\n  onEditChange(e) {\n    this.setState({\n      editValue: e.target.value\n    });\n  }\n\n  submitAdd() {\n    axios.post('http://localhost:5000/add-mood', {\n      id: this.state.userSession['id'],\n      mood: this.state.addValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      updatedMoods[this.state.addValue] = {};\n      this.setState(prevState => ({\n        showAddModal: false,\n        moods: { ...prevState.moods,\n          [this.state.addValue]: {}\n        }\n      }));\n    });\n  }\n\n  submitEdit() {\n    axios.put('http://localhost:5000/edit-mood', {\n      oldMood: this.state.moodSelected,\n      newMood: this.state.editValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      let temp = updatedMoods[this.state.moodSelected];\n      delete updatedMoods[this.state.moodSelected];\n      updatedMoods[this.state.editValue] = temp;\n      this.setState({\n        showEditModal: false,\n        moodSelected: '',\n        moods: updatedMoods\n      });\n    });\n  }\n\n  submitConfirmDelete() {\n    axios.post('http://localhost:5000/delete-mood', {\n      id: this.state.userSession['id'],\n      mood: this.state.moodSelected\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      delete updatedMoods[this.state.moodSelected];\n      this.setState({\n        showDeleteModal: false,\n        moodSelected: '',\n        moods: updatedMoods\n      });\n    });\n  }\n\n  handleOpenIntensityModal() {\n    axios.post('http://localhost:5000/add-logentry', {\n      id: this.state.userSession['id'],\n      mood: this.state.moodSelected\n    }, {\n      withCredentials: true\n    });\n  }\n\n  render() {\n    let i = 0;\n    let moods = [];\n\n    for (let mood in this.state.moods) {\n      moods.push(mood);\n    }\n\n    let moodList = moods.map(mood => /*#__PURE__*/React.createElement(\"li\", {\n      key: i++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-primary-outline\",\n      onClick: () => {\n        this.handleOpenIntensityModal(mood);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, mood), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.handleOpenEditModal(mood);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.handleOpenDeleteModal(mood);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, \"Delete\")));\n    let modal;\n\n    if (this.state.showAddModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"modal-backing\",\n        isOpen: this.state.showAddModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, \"Add a Mood\"), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"add-mood\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, \"Mood (max 20 characters) \"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"input-default\",\n        type: \"text\",\n        name: \"add-mood\",\n        onChange: this.onAddChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseAddModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    } else if (this.state.showEditModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"modal-backing\",\n        isOpen: this.state.showEditModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, \"Edit a Mood\"), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"edit-mood\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, \"Mood (max 20 characters) \"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"input-default\",\n        type: \"text\",\n        name: \"edit-mood\",\n        onChange: this.onEditChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseEditModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    } else if (this.state.showDeleteModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"modal-backing\",\n        isOpen: this.state.showDeleteModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, \"Are you sure you want to delete \", this.state.moodSelected, \"?\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitConfirmDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, \"Accept\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-backing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"Moods\"), modal, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, moodList), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-primary-solid\",\n      onClick: this.handleOpenAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, \"Add Mood\"));\n  }\n\n}\n\nexport default MoodList;","map":{"version":3,"sources":["/Users/alenakim/Documents/GitHub/Companion/src/components/mood-list/MoodList.js"],"names":["React","axios","Session","ReactModal","Container","Row","Col","Button","MoodList","Component","constructor","state","userSession","get","moods","showAddModal","showEditModal","showDeleteModal","moodSelected","editValue","addValue","intensity","onAddChange","bind","onEditChange","submitAdd","submitEdit","submitConfirmDelete","handleOpenAddModal","handleCloseAddModal","handleOpenEditModal","handleOpenDeleteModal","handleCloseEditModal","handleCloseDeleteModal","handleOpenIntensityModal","componentDidMount","params","id","withCredentials","then","res","setState","data","mood","e","target","value","post","updatedMoods","prevState","put","oldMood","newMood","temp","render","i","push","moodList","map","modal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CAEA;;AACA,OAAO,sCAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,iBAA5C;AACA,OAAO,2BAAP;;AAIA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEV,OAAO,CAACW,GAAR,CAAY,MAAZ,CADF;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,YAAY,EAAE,KAHH;AAIXC,MAAAA,aAAa,EAAE,KAJJ;AAKXC,MAAAA,eAAe,EAAE,KALN;AAMXC,MAAAA,YAAY,EAAE,EANH;AAOXC,MAAAA,SAAS,EAAE,EAPA;AAQXC,MAAAA,QAAQ,EAAE,EARC;AASXC,MAAAA,SAAS,EAAE;AATA,KAAb;AAWA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKI,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBJ,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKK,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBL,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKM,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBN,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKO,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBP,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKQ,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BR,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKS,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BT,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKU,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BV,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKW,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BX,IAA9B,CAAmC,IAAnC,CAAhC;AACD;;AAEDY,EAAAA,iBAAiB,GAAE;AACjB,QAAG,KAAKxB,KAAL,CAAWC,WAAd,EAA2B;AACzBX,MAAAA,KAAK,CAACY,GAAN,CAAU,iCAAV,EAA6C;AAC3CuB,QAAAA,MAAM,EAAE;AAAEC,UAAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWC,WAAX,CAAuB,IAAvB;AAAN,SADmC;AAE3C0B,QAAAA,eAAe,EAAE;AAF0B,OAA7C,EAGGC,IAHH,CAGQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAE3B,QAAAA,KAAK,EAAE0B,GAAG,CAACE,IAAJ,CAAS5B;AAAlB,OAAd,CAHf;AAID;AACF;;AAEDc,EAAAA,kBAAkB,GAAG;AACnB,SAAKa,QAAL,CAAc;AACZ1B,MAAAA,YAAY,EAAE;AADF,KAAd;AAGD;;AAEDe,EAAAA,mBAAmB,CAACa,IAAD,EAAO;AACxB,SAAKF,QAAL,CAAc;AACZzB,MAAAA,aAAa,EAAE,IADH;AAEZE,MAAAA,YAAY,EAAEyB;AAFF,KAAd;AAID;;AAEDZ,EAAAA,qBAAqB,CAACY,IAAD,EAAO;AAC1B,SAAKF,QAAL,CAAc;AACZxB,MAAAA,eAAe,EAAE,IADL;AAEZC,MAAAA,YAAY,EAAEyB;AAFF,KAAd;AAID;;AAEDd,EAAAA,mBAAmB,GAAG;AACpB,SAAKY,QAAL,CAAc;AAAE1B,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACD;;AAEDiB,EAAAA,oBAAoB,GAAI;AACtB,SAAKS,QAAL,CAAc;AAAEzB,MAAAA,aAAa,EAAE;AAAjB,KAAd;AACD;;AAEDiB,EAAAA,sBAAsB,GAAI;AACxB,SAAKQ,QAAL,CAAc;AAAExB,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACD;;AAEDK,EAAAA,WAAW,CAACsB,CAAD,EAAI;AACb,SAAKH,QAAL,CAAc;AACZrB,MAAAA,QAAQ,EAAEwB,CAAC,CAACC,MAAF,CAASC;AADP,KAAd;AAGD;;AAEDtB,EAAAA,YAAY,CAACoB,CAAD,EAAI;AACd,SAAKH,QAAL,CAAc;AACZtB,MAAAA,SAAS,EAAEyB,CAAC,CAACC,MAAF,CAASC;AADR,KAAd;AAGD;;AAEDrB,EAAAA,SAAS,GAAG;AACVxB,IAAAA,KAAK,CAAC8C,IAAN,CAAW,gCAAX,EAA6C;AAACV,MAAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWC,WAAX,CAAuB,IAAvB,CAAL;AAAmC+B,MAAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWS;AAApD,KAA7C,EAA4G;AAACkB,MAAAA,eAAe,EAAE;AAAlB,KAA5G,EACCC,IADD,CACMC,GAAG,IAAI;AACX,UAAIQ,YAAY,GAAG,KAAKrC,KAAL,CAAWG,KAA9B;AACAkC,MAAAA,YAAY,CAAC,KAAKrC,KAAL,CAAWS,QAAZ,CAAZ,GAAoC,EAApC;AACA,WAAKqB,QAAL,CAAcQ,SAAS,KAAK;AAC1BlC,QAAAA,YAAY,EAAE,KADY;AAE1BD,QAAAA,KAAK,EAAE,EACL,GAAGmC,SAAS,CAACnC,KADR;AAEL,WAAC,KAAKH,KAAL,CAAWS,QAAZ,GAAuB;AAFlB;AAFmB,OAAL,CAAvB;AAOD,KAXD;AAYD;;AAEDM,EAAAA,UAAU,GAAG;AACXzB,IAAAA,KAAK,CAACiD,GAAN,CAAU,iCAAV,EAA6C;AAACC,MAAAA,OAAO,EAAE,KAAKxC,KAAL,CAAWO,YAArB;AAAmCkC,MAAAA,OAAO,EAAE,KAAKzC,KAAL,CAAWQ;AAAvD,KAA7C,EAAgH;AAAEmB,MAAAA,eAAe,EAAE;AAAnB,KAAhH,EACGC,IADH,CACQC,GAAG,IAAI;AACb,UAAIQ,YAAY,GAAG,KAAKrC,KAAL,CAAWG,KAA9B;AACA,UAAIuC,IAAI,GAAGL,YAAY,CAAC,KAAKrC,KAAL,CAAWO,YAAZ,CAAvB;AACA,aAAO8B,YAAY,CAAC,KAAKrC,KAAL,CAAWO,YAAZ,CAAnB;AACA8B,MAAAA,YAAY,CAAC,KAAKrC,KAAL,CAAWQ,SAAZ,CAAZ,GAAqCkC,IAArC;AACA,WAAKZ,QAAL,CAAc;AACZzB,QAAAA,aAAa,EAAE,KADH;AAEZE,QAAAA,YAAY,EAAE,EAFF;AAGZJ,QAAAA,KAAK,EAAEkC;AAHK,OAAd;AAKD,KAXD;AAYD;;AAEDrB,EAAAA,mBAAmB,GAAG;AACpB1B,IAAAA,KAAK,CAAC8C,IAAN,CAAW,mCAAX,EAAgD;AAACV,MAAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWC,WAAX,CAAuB,IAAvB,CAAL;AAAmC+B,MAAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWO;AAApD,KAAhD,EAAmH;AAAEoB,MAAAA,eAAe,EAAE;AAAnB,KAAnH,EACGC,IADH,CACSC,GAAD,IAAS;AACf,UAAIQ,YAAY,GAAG,KAAKrC,KAAL,CAAWG,KAA9B;AACA,aAAOkC,YAAY,CAAC,KAAKrC,KAAL,CAAWO,YAAZ,CAAnB;AACA,WAAKuB,QAAL,CAAc;AACZxB,QAAAA,eAAe,EAAE,KADL;AAEZC,QAAAA,YAAY,EAAE,EAFF;AAGZJ,QAAAA,KAAK,EAAEkC;AAHK,OAAd;AAKD,KATD;AAUD;;AAEDd,EAAAA,wBAAwB,GAAE;AACxBjC,IAAAA,KAAK,CAAC8C,IAAN,CAAW,oCAAX,EACE;AAACV,MAAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWC,WAAX,CAAuB,IAAvB,CAAL;AAAmC+B,MAAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWO;AAApD,KADF,EAEE;AAAEoB,MAAAA,eAAe,EAAE;AAAnB,KAFF;AAID;;AAEDgB,EAAAA,MAAM,GAAE;AACN,QAAIC,CAAC,GAAE,CAAP;AACA,QAAIzC,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAI6B,IAAR,IAAgB,KAAKhC,KAAL,CAAWG,KAA3B,EAAkC;AAChCA,MAAAA,KAAK,CAAC0C,IAAN,CAAWb,IAAX;AACD;;AACD,QAAIc,QAAQ,GAAG3C,KAAK,CAAC4C,GAAN,CAAWf,IAAD,iBACvB;AAAI,MAAA,GAAG,EAAEY,CAAC,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAE,MAAK;AAAC,aAAKrB,wBAAL,CAA8BS,IAA9B;AAAoC,OAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IADH,CADF,eAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKb,mBAAL,CAAyBa,IAAzB;AAA+B,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKZ,qBAAL,CAA2BY,IAA3B;AAAiC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADa,CAAf;AAQA,QAAIgB,KAAJ;;AACA,QAAG,KAAKhD,KAAL,CAAWI,YAAd,EAA4B;AAC1B4C,MAAAA,KAAK,gBACL,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AACE,QAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWI,YADrB;AAEE,QAAA,YAAY,EAAC,2BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAKE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCALF,eAME;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,IAAI,EAAC,UAAlD;AAA6D,QAAA,QAAQ,EAAE,KAAKO,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,eAOE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKG,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAQE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,KAAKI,mBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CADA;AAYD,KAbD,MAcK,IAAG,KAAKlB,KAAL,CAAWK,aAAd,EAA6B;AAChC2C,MAAAA,KAAK,gBACL,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AACE,QAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWK,aADrB;AAEE,QAAA,YAAY,EAAC,2BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,eAIE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJF,eAKE;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,IAAI,EAAC,WAAlD;AAA8D,QAAA,QAAQ,EAAE,KAAKQ,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAME,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKE,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,KAAKM,oBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADA;AAUD,KAXI,MAYA,IAAG,KAAKrB,KAAL,CAAWM,eAAd,EAA+B;AAClC0C,MAAAA,KAAK,gBACL,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AACE,QAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWM,eADrB;AAEE,QAAA,YAAY,EAAC,2BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAoC,KAAKN,KAAL,CAAWO,YAA/C,MAHF,eAIE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKS,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,KAAKM,sBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADA;AAQD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEG0B,KAFH,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QADH,CAHF,eAME,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,KAAK7B,kBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CADF;AAUD;;AAhMiC;;AAmMtC,eAAepB,QAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal';\n\n// Styling\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport '../../styles/css/main.css';\n\n\n\nclass MoodList extends React.Component{\n    constructor(){\n      super()\n      this.state = {\n        userSession: Session.get('user'),\n        moods: {},\n        showAddModal: false,\n        showEditModal: false,\n        showDeleteModal: false,\n        moodSelected: '',\n        editValue: '',\n        addValue: '',\n        intensity: '',\n      }\n      this.onAddChange = this.onAddChange.bind(this);\n      this.onEditChange = this.onEditChange.bind(this);\n      this.submitAdd = this.submitAdd.bind(this);\n      this.submitEdit = this.submitEdit.bind(this);\n      this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n      this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n      this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n      this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n      this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n      this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n      this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n      this.handleOpenIntensityModal = this.handleOpenIntensityModal.bind(this);\n    }\n  \n    componentDidMount(){\n      if(this.state.userSession) {\n        axios.get('http://localhost:5000/get-moods', {\n          params: { id: this.state.userSession['id'] },\n          withCredentials: true\n        }).then(res => this.setState({ moods: res.data.moods }))\n      }\n    }\n  \n    handleOpenAddModal() {\n      this.setState({\n        showAddModal: true\n      });\n    }\n  \n    handleOpenEditModal(mood) {\n      this.setState({\n        showEditModal: true,\n        moodSelected: mood\n      });\n    }\n  \n    handleOpenDeleteModal(mood) {\n      this.setState({\n        showDeleteModal: true,\n        moodSelected: mood\n      });\n    }\n  \n    handleCloseAddModal() {\n      this.setState({ showAddModal: false });\n    }\n  \n    handleCloseEditModal () {\n      this.setState({ showEditModal: false });\n    }\n  \n    handleCloseDeleteModal () {\n      this.setState({ showDeleteModal: false });\n    }\n  \n    onAddChange(e) {\n      this.setState({\n        addValue: e.target.value\n      })\n    }\n  \n    onEditChange(e) {\n      this.setState({\n        editValue: e.target.value\n      })\n    }\n  \n    submitAdd() {\n      axios.post('http://localhost:5000/add-mood', {id: this.state.userSession['id'], mood: this.state.addValue}, {withCredentials: true})\n      .then(res => {\n        let updatedMoods = this.state.moods;\n        updatedMoods[this.state.addValue] = {}\n        this.setState(prevState => ({\n          showAddModal: false,\n          moods: {\n            ...prevState.moods,\n            [this.state.addValue]: {}\n          }\n        }))\n      })\n    }\n  \n    submitEdit() {\n      axios.put('http://localhost:5000/edit-mood', {oldMood: this.state.moodSelected, newMood: this.state.editValue}, { withCredentials: true })\n        .then(res => {\n        let updatedMoods = this.state.moods;\n        let temp = updatedMoods[this.state.moodSelected]\n        delete updatedMoods[this.state.moodSelected]\n        updatedMoods[this.state.editValue] = temp\n        this.setState({\n          showEditModal: false,\n          moodSelected: '',\n          moods: updatedMoods\n        })\n      })\n    }\n  \n    submitConfirmDelete() {\n      axios.post('http://localhost:5000/delete-mood', {id: this.state.userSession['id'], mood: this.state.moodSelected}, { withCredentials: true })\n        .then((res) => {\n        let updatedMoods = this.state.moods\n        delete updatedMoods[this.state.moodSelected]\n        this.setState({\n          showDeleteModal: false,\n          moodSelected: '',\n          moods: updatedMoods\n        })\n      })\n    }\n\n    handleOpenIntensityModal(){\n      axios.post('http://localhost:5000/add-logentry', \n        {id: this.state.userSession['id'], mood: this.state.moodSelected}, \n        { withCredentials: true }\n      )\n    }\n  \n    render(){\n      let i =0\n      let moods = []\n      for(let mood in this.state.moods) {\n        moods.push(mood)\n      }\n      let moodList = moods.map((mood) =>\n        <li key={i++}>\n          <Button className=\"btn-primary-outline\" onClick={()=> {this.handleOpenIntensityModal(mood)}}>\n            {mood}\n          </Button>\n          <Button onClick={() => {this.handleOpenEditModal(mood)}}>Edit</Button>\n          <Button onClick={() => {this.handleOpenDeleteModal(mood)}}>Delete</Button>\n        </li>)\n      let modal;\n      if(this.state.showAddModal) {\n        modal =\n        <ReactModal className=\"modal-backing\"\n          isOpen={this.state.showAddModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <h1>Add a Mood</h1>\n\n          <label htmlFor=\"add-mood\">Mood (max 20 characters) </label>\n          <input className=\"input-default\" type=\"text\" name=\"add-mood\" onChange={this.onAddChange}/>\n          <Button className=\"btn-secondary-default\" onClick={this.submitAdd}>Add</Button>\n          <Button className=\"btn-secondary-alert\" onClick={this.handleCloseAddModal}>Cancel</Button>\n\n        </ReactModal>\n      }\n      else if(this.state.showEditModal) {\n        modal =\n        <ReactModal className=\"modal-backing\"\n          isOpen={this.state.showEditModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <h1>Edit a Mood</h1>\n          <label htmlFor=\"edit-mood\">Mood (max 20 characters) </label>\n          <input className=\"input-default\" type=\"text\" name=\"edit-mood\" onChange={this.onEditChange}/>\n          <Button className=\"btn-secondary-default\" onClick={this.submitEdit}>Edit</Button>\n          <Button className=\"btn-secondary-alert\" onClick={this.handleCloseEditModal}>Cancel</Button>\n        </ReactModal>\n      }\n      else if(this.state.showDeleteModal) {\n        modal =\n        <ReactModal className=\"modal-backing\"\n          isOpen={this.state.showDeleteModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <p>Are you sure you want to delete {this.state.moodSelected}?</p>\n          <Button className=\"btn-secondary-default\" onClick={this.submitConfirmDelete}>Accept</Button>\n          <Button className=\"btn-secondary-alert\" onClick={this.handleCloseDeleteModal}>Cancel</Button>\n        </ReactModal>\n      }\n      return (\n        <div className=\"div-backing\">\n          <h1>Moods</h1>\n          {modal}\n          <ul>\n            {moodList}\n          </ul>\n          <Button className=\"btn-primary-solid\" onClick={this.handleOpenAddModal}>Add Mood</Button>\n        </div>\n      )\n    }\n  }\n\nexport default MoodList;\n  "]},"metadata":{},"sourceType":"module"}