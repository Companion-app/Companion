{"ast":null,"code":"var _jsxFileName = \"/Users/alenakim/Documents/GitHub/Companion/src/components/med-list/MedList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal'; // Styling\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport '../../styles/css/main.css';\n\nclass MedList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userSession: Session.get('user'),\n      meds: {},\n      showAddModal: false,\n      showEditModal: false,\n      showDeleteModal: false,\n      medSelected: '',\n      editValue: '',\n      addValue: '',\n      notesValue: ''\n    };\n    this.onAddChange = this.onAddChange.bind(this);\n    this.onNotesAddChange = this.onNotesAddChange.bind(this);\n    this.onEditChange = this.onEditChange.bind(this);\n    this.submitAdd = this.submitAdd.bind(this);\n    this.submitEdit = this.submitEdit.bind(this);\n    this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n    this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n    this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n    this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n    this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n    this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n    this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.userSession) {\n      axios.get('http://localhost:5000/get-meds', {\n        params: {\n          id: this.state.userSession['id']\n        },\n        withCredentials: true\n      }).then(res => this.setState({\n        meds: res.data.meds\n      }));\n    }\n  }\n\n  handleOpenAddModal() {\n    this.setState({\n      showAddModal: true\n    });\n  }\n\n  handleOpenEditModal(med) {\n    this.setState({\n      showEditModal: true,\n      medSelected: med\n    });\n  }\n\n  handleOpenDeleteModal(med) {\n    this.setState({\n      showDeleteModal: true,\n      medSelected: med\n    });\n  }\n\n  handleCloseAddModal() {\n    this.setState({\n      showAddModal: false\n    });\n  }\n\n  handleCloseEditModal() {\n    this.setState({\n      showEditModal: false\n    });\n  }\n\n  handleCloseDeleteModal() {\n    this.setState({\n      showDeleteModal: false\n    });\n  }\n\n  onAddChange(e) {\n    this.setState({\n      addValue: e.target.value\n    });\n  }\n\n  onEditChange(e) {\n    this.setState({\n      editValue: e.target.value\n    });\n  }\n\n  submitAdd() {\n    axios.post('http://localhost:5000/add-mesd', {\n      id: this.state.userSession['id'],\n      med: this.state.addValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMeds = this.state.meds;\n      updatedMeds[this.state.addValue] = {};\n      this.setState(prevState => ({\n        showAddModal: false,\n        meds: { ...prevState.meds,\n          [this.state.addValue]: {}\n        }\n      }));\n    });\n  }\n\n  submitEdit() {\n    axios.put('http://localhost:5000/edit-med', {\n      oldMed: this.state.medSelected,\n      newMed: this.state.editValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMeds = this.state.meds;\n      let temp = updatedMeds[this.state.medSelected];\n      delete updatedMeds[this.state.medSelected];\n      updatedMeds[this.state.editValue] = temp;\n      this.setState({\n        showEditModal: false,\n        medSelected: '',\n        meds: updatedMeds\n      });\n    });\n  }\n\n  submitConfirmDelete() {\n    axios.post('http://localhost:5000/delete-med', {\n      id: this.state.userSession['id'],\n      med: this.state.medSelected\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMeds = this.state.meds;\n      delete updatedMeds[this.state.medSelected];\n      this.setState({\n        showDeleteModal: false,\n        medSelected: '',\n        meds: updatedMeds\n      });\n    });\n  }\n\n  render() {\n    let i = 0;\n    let meds = [];\n\n    for (let med in this.state.meds) {\n      meds.push(med);\n    }\n\n    let medList = meds.map(med => /*#__PURE__*/React.createElement(\"li\", {\n      key: i++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, med, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.handleOpenEditModal(med);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.handleOpenDeleteModal(med);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, \"Delete\")));\n    let modal;\n\n    if (this.state.showAddModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.state.showAddModal,\n        contentLabel: \"Confirm delete med modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, \"Add a Medication\"), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"add-med\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, \"Medication (max 20 characters) \"), /*#__PURE__*/React.createElement(\"input\", {\n        class: \"input-default\",\n        type: \"text\",\n        name: \"add-med\",\n        onChange: this.onAddChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"add-med\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, \"Notes\"), /*#__PURE__*/React.createElement(\"input\", {\n        class: \"input-default\",\n        type: \"text\",\n        name: \"add-notes\",\n        onChange: this.onNotesAddChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseAddModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    } else if (this.state.showEditModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.state.showEditModal,\n        contentLabel: \"Confirm delete med modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, \"Edit a Medication\"), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"edit-med\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, \"Medication (max 20 characters) \"), /*#__PURE__*/React.createElement(\"input\", {\n        class: \"input-default\",\n        type: \"text\",\n        name: \"edit-med\",\n        onChange: this.onEditChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseEditModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    } else if (this.state.showDeleteModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.state.showDeleteModal,\n        contentLabel: \"Confirm delete med modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, \"Are you sure you want to delete \", this.state.medSelected, \"?\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitConfirmDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, \"Accept\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, \"Medications\"), modal, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, medList), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-primary-solid\",\n      onClick: this.handleOpenAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"Add Med\"));\n  }\n\n}\n\nexport default MedList;","map":{"version":3,"sources":["/Users/alenakim/Documents/GitHub/Companion/src/components/med-list/MedList.js"],"names":["React","axios","Session","ReactModal","Container","Row","Col","Button","MedList","Component","constructor","state","userSession","get","meds","showAddModal","showEditModal","showDeleteModal","medSelected","editValue","addValue","notesValue","onAddChange","bind","onNotesAddChange","onEditChange","submitAdd","submitEdit","submitConfirmDelete","handleOpenAddModal","handleCloseAddModal","handleOpenEditModal","handleOpenDeleteModal","handleCloseEditModal","handleCloseDeleteModal","componentDidMount","params","id","withCredentials","then","res","setState","data","med","e","target","value","post","updatedMeds","prevState","put","oldMed","newMed","temp","render","i","push","medList","map","modal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CAEA;;AACA,OAAO,sCAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,iBAA5C;AACA,OAAO,2BAAP;;AAIA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEV,OAAO,CAACW,GAAR,CAAY,MAAZ,CADF;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,YAAY,EAAE,KAHH;AAIXC,MAAAA,aAAa,EAAE,KAJJ;AAKXC,MAAAA,eAAe,EAAE,KALN;AAMXC,MAAAA,WAAW,EAAE,EANF;AAOXC,MAAAA,SAAS,EAAE,EAPA;AAQXC,MAAAA,QAAQ,EAAE,EARC;AASXC,MAAAA,UAAU,EAAE;AATD,KAAb;AAWA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,SAAL,GAAiB,KAAKA,SAAL,CAAeH,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKI,UAAL,GAAkB,KAAKA,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKK,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBL,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKM,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBN,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKO,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBP,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKQ,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBR,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKS,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BT,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKU,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BV,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKW,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BX,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AAEDY,EAAAA,iBAAiB,GAAE;AACjB,QAAG,KAAKxB,KAAL,CAAWC,WAAd,EAA2B;AACzBX,MAAAA,KAAK,CAACY,GAAN,CAAU,gCAAV,EAA4C;AAC1CuB,QAAAA,MAAM,EAAE;AAAEC,UAAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWC,WAAX,CAAuB,IAAvB;AAAN,SADkC;AAE1C0B,QAAAA,eAAe,EAAE;AAFyB,OAA5C,EAGGC,IAHH,CAGQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAE3B,QAAAA,IAAI,EAAE0B,GAAG,CAACE,IAAJ,CAAS5B;AAAjB,OAAd,CAHf;AAID;AACF;;AAEDe,EAAAA,kBAAkB,GAAG;AACnB,SAAKY,QAAL,CAAc;AACZ1B,MAAAA,YAAY,EAAE;AADF,KAAd;AAGD;;AAEDgB,EAAAA,mBAAmB,CAACY,GAAD,EAAM;AACvB,SAAKF,QAAL,CAAc;AACZzB,MAAAA,aAAa,EAAE,IADH;AAEZE,MAAAA,WAAW,EAAEyB;AAFD,KAAd;AAID;;AAEDX,EAAAA,qBAAqB,CAACW,GAAD,EAAM;AACzB,SAAKF,QAAL,CAAc;AACZxB,MAAAA,eAAe,EAAE,IADL;AAEZC,MAAAA,WAAW,EAAEyB;AAFD,KAAd;AAID;;AAEDb,EAAAA,mBAAmB,GAAG;AACpB,SAAKW,QAAL,CAAc;AAAE1B,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACD;;AAEDkB,EAAAA,oBAAoB,GAAI;AACtB,SAAKQ,QAAL,CAAc;AAAEzB,MAAAA,aAAa,EAAE;AAAjB,KAAd;AACD;;AAEDkB,EAAAA,sBAAsB,GAAI;AACxB,SAAKO,QAAL,CAAc;AAAExB,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACD;;AAEDK,EAAAA,WAAW,CAACsB,CAAD,EAAI;AACb,SAAKH,QAAL,CAAc;AACZrB,MAAAA,QAAQ,EAAEwB,CAAC,CAACC,MAAF,CAASC;AADP,KAAd;AAGD;;AAEDrB,EAAAA,YAAY,CAACmB,CAAD,EAAI;AACd,SAAKH,QAAL,CAAc;AACZtB,MAAAA,SAAS,EAAEyB,CAAC,CAACC,MAAF,CAASC;AADR,KAAd;AAGD;;AAEDpB,EAAAA,SAAS,GAAG;AACVzB,IAAAA,KAAK,CAAC8C,IAAN,CAAW,gCAAX,EACA;AAACV,MAAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWC,WAAX,CAAuB,IAAvB,CAAL;AAAmC+B,MAAAA,GAAG,EAAE,KAAKhC,KAAL,CAAWS;AAAnD,KADA,EAEA;AAACkB,MAAAA,eAAe,EAAE;AAAlB,KAFA,EAGCC,IAHD,CAGMC,GAAG,IAAI;AACX,UAAIQ,WAAW,GAAG,KAAKrC,KAAL,CAAWG,IAA7B;AACAkC,MAAAA,WAAW,CAAC,KAAKrC,KAAL,CAAWS,QAAZ,CAAX,GAAmC,EAAnC;AACA,WAAKqB,QAAL,CAAcQ,SAAS,KAAK;AAC1BlC,QAAAA,YAAY,EAAE,KADY;AAE1BD,QAAAA,IAAI,EAAE,EACJ,GAAGmC,SAAS,CAACnC,IADT;AAEJ,WAAC,KAAKH,KAAL,CAAWS,QAAZ,GAAuB;AAFnB;AAFoB,OAAL,CAAvB;AAOD,KAbD;AAcD;;AAEDO,EAAAA,UAAU,GAAG;AACX1B,IAAAA,KAAK,CAACiD,GAAN,CAAU,gCAAV,EAA4C;AAACC,MAAAA,MAAM,EAAE,KAAKxC,KAAL,CAAWO,WAApB;AAAiCkC,MAAAA,MAAM,EAAE,KAAKzC,KAAL,CAAWQ;AAApD,KAA5C,EAA4G;AAAEmB,MAAAA,eAAe,EAAE;AAAnB,KAA5G,EACGC,IADH,CACQC,GAAG,IAAI;AACb,UAAIQ,WAAW,GAAG,KAAKrC,KAAL,CAAWG,IAA7B;AACA,UAAIuC,IAAI,GAAGL,WAAW,CAAC,KAAKrC,KAAL,CAAWO,WAAZ,CAAtB;AACA,aAAO8B,WAAW,CAAC,KAAKrC,KAAL,CAAWO,WAAZ,CAAlB;AACA8B,MAAAA,WAAW,CAAC,KAAKrC,KAAL,CAAWQ,SAAZ,CAAX,GAAoCkC,IAApC;AACA,WAAKZ,QAAL,CAAc;AACZzB,QAAAA,aAAa,EAAE,KADH;AAEZE,QAAAA,WAAW,EAAE,EAFD;AAGZJ,QAAAA,IAAI,EAAEkC;AAHM,OAAd;AAKD,KAXD;AAYD;;AAEDpB,EAAAA,mBAAmB,GAAG;AACpB3B,IAAAA,KAAK,CAAC8C,IAAN,CAAW,kCAAX,EAA+C;AAACV,MAAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWC,WAAX,CAAuB,IAAvB,CAAL;AAAmC+B,MAAAA,GAAG,EAAE,KAAKhC,KAAL,CAAWO;AAAnD,KAA/C,EAAgH;AAAEoB,MAAAA,eAAe,EAAE;AAAnB,KAAhH,EACGC,IADH,CACSC,GAAD,IAAS;AACf,UAAIQ,WAAW,GAAG,KAAKrC,KAAL,CAAWG,IAA7B;AACA,aAAOkC,WAAW,CAAC,KAAKrC,KAAL,CAAWO,WAAZ,CAAlB;AACA,WAAKuB,QAAL,CAAc;AACZxB,QAAAA,eAAe,EAAE,KADL;AAEZC,QAAAA,WAAW,EAAE,EAFD;AAGZJ,QAAAA,IAAI,EAAEkC;AAHM,OAAd;AAKD,KATD;AAUD;;AAEDM,EAAAA,MAAM,GAAE;AACN,QAAIC,CAAC,GAAE,CAAP;AACA,QAAIzC,IAAI,GAAG,EAAX;;AACA,SAAI,IAAI6B,GAAR,IAAe,KAAKhC,KAAL,CAAWG,IAA1B,EAAgC;AAC9BA,MAAAA,IAAI,CAAC0C,IAAL,CAAUb,GAAV;AACD;;AACD,QAAIc,OAAO,GAAG3C,IAAI,CAAC4C,GAAL,CAAUf,GAAD,iBACrB;AAAI,MAAA,GAAG,EAAEY,CAAC,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,GADH,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKZ,mBAAL,CAAyBY,GAAzB;AAA8B,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKX,qBAAL,CAA2BW,GAA3B;AAAgC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADY,CAAd;AAMA,QAAIgB,KAAJ;;AACA,QAAG,KAAKhD,KAAL,CAAWI,YAAd,EAA4B;AAC1B4C,MAAAA,KAAK,gBACL,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWI,YADrB;AAEE,QAAA,YAAY,EAAC,0BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,eAKE;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CALF,eAME;AAAO,QAAA,KAAK,EAAC,eAAb;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,IAAI,EAAC,SAA9C;AAAwD,QAAA,QAAQ,EAAE,KAAKO,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,eAOE;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,eAQE;AAAO,QAAA,KAAK,EAAC,eAAb;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,IAAI,EAAC,WAA9C;AAA0D,QAAA,QAAQ,EAAE,KAAKE,gBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,eASE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKE,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,eAUE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,KAAKI,mBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CADA;AAcD,KAfD,MAgBK,IAAG,KAAKnB,KAAL,CAAWK,aAAd,EAA6B;AAChC2C,MAAAA,KAAK,gBACL,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWK,aADrB;AAEE,QAAA,YAAY,EAAC,0BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,eAIE;AAAO,QAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJF,eAKE;AAAO,QAAA,KAAK,EAAC,eAAb;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,IAAI,EAAC,UAA9C;AAAyD,QAAA,QAAQ,EAAE,KAAKS,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAME,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKE,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,KAAKM,oBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADA;AAUD,KAXI,MAYA,IAAG,KAAKtB,KAAL,CAAWM,eAAd,EAA+B;AAClC0C,MAAAA,KAAK,gBACL,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWM,eADrB;AAEE,QAAA,YAAY,EAAC,0BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAoC,KAAKN,KAAL,CAAWO,WAA/C,MAHF,eAIE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,KAAKU,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,KAAKM,sBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADA;AAQD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEGyB,KAFH,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OADH,CAHF,eAME,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,KAAK5B,kBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CADF;AAUD;;AA3LgC;;AA8LrC,eAAerB,OAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal';\n\n// Styling\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport '../../styles/css/main.css';\n\n\n\nclass MedList extends React.Component{\n    constructor(){\n      super()\n      this.state = {\n        userSession: Session.get('user'),\n        meds: {},\n        showAddModal: false,\n        showEditModal: false,\n        showDeleteModal: false,\n        medSelected: '',\n        editValue: '',\n        addValue: '',\n        notesValue: ''\n      }\n      this.onAddChange = this.onAddChange.bind(this);\n      this.onNotesAddChange = this.onNotesAddChange.bind(this);\n      this.onEditChange = this.onEditChange.bind(this);\n      this.submitAdd = this.submitAdd.bind(this);\n      this.submitEdit = this.submitEdit.bind(this);\n      this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n      this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n      this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n      this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n      this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n      this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n      this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n    }\n  \n    componentDidMount(){\n      if(this.state.userSession) {\n        axios.get('http://localhost:5000/get-meds', {\n          params: { id: this.state.userSession['id'] },\n          withCredentials: true\n        }).then(res => this.setState({ meds: res.data.meds }))\n      }\n    }\n  \n    handleOpenAddModal() {\n      this.setState({\n        showAddModal: true\n      });\n    }\n  \n    handleOpenEditModal(med) {\n      this.setState({\n        showEditModal: true,\n        medSelected: med\n      });\n    }\n  \n    handleOpenDeleteModal(med) {\n      this.setState({\n        showDeleteModal: true,\n        medSelected: med\n      });\n    }\n  \n    handleCloseAddModal() {\n      this.setState({ showAddModal: false });\n    }\n  \n    handleCloseEditModal () {\n      this.setState({ showEditModal: false });\n    }\n  \n    handleCloseDeleteModal () {\n      this.setState({ showDeleteModal: false });\n    }\n  \n    onAddChange(e) {\n      this.setState({\n        addValue: e.target.value\n      })\n    }\n  \n    onEditChange(e) {\n      this.setState({\n        editValue: e.target.value\n      })\n    }\n  \n    submitAdd() {\n      axios.post('http://localhost:5000/add-mesd', \n      {id: this.state.userSession['id'], med: this.state.addValue},\n      {withCredentials: true})\n      .then(res => {\n        let updatedMeds = this.state.meds;\n        updatedMeds[this.state.addValue] = {}\n        this.setState(prevState => ({\n          showAddModal: false,\n          meds: {\n            ...prevState.meds,\n            [this.state.addValue]: {}\n          }\n        }))\n      })\n    }\n  \n    submitEdit() {\n      axios.put('http://localhost:5000/edit-med', {oldMed: this.state.medSelected, newMed: this.state.editValue}, { withCredentials: true })\n        .then(res => {\n        let updatedMeds = this.state.meds;\n        let temp = updatedMeds[this.state.medSelected]\n        delete updatedMeds[this.state.medSelected]\n        updatedMeds[this.state.editValue] = temp\n        this.setState({\n          showEditModal: false,\n          medSelected: '',\n          meds: updatedMeds\n        })\n      })\n    }\n  \n    submitConfirmDelete() {\n      axios.post('http://localhost:5000/delete-med', {id: this.state.userSession['id'], med: this.state.medSelected}, { withCredentials: true })\n        .then((res) => {\n        let updatedMeds = this.state.meds\n        delete updatedMeds[this.state.medSelected]\n        this.setState({\n          showDeleteModal: false,\n          medSelected: '',\n          meds: updatedMeds\n        })\n      })\n    }\n  \n    render(){\n      let i =0\n      let meds = []\n      for(let med in this.state.meds) {\n        meds.push(med)\n      }\n      let medList = meds.map((med) =>\n        <li key={i++}>\n          {med}\n          <Button onClick={() => {this.handleOpenEditModal(med)}}>Edit</Button>\n          <Button onClick={() => {this.handleOpenDeleteModal(med)}}>Delete</Button>\n        </li>)\n      let modal;\n      if(this.state.showAddModal) {\n        modal =\n        <ReactModal\n          isOpen={this.state.showAddModal}\n          contentLabel=\"Confirm delete med modal\">\n          <h1>Add a Medication</h1>\n\n          <label for=\"add-med\">Medication (max 20 characters) </label>\n          <input class=\"input-default\" type=\"text\" name=\"add-med\" onChange={this.onAddChange}/>\n          <label for=\"add-med\">Notes</label>\n          <input class=\"input-default\" type=\"text\" name=\"add-notes\" onChange={this.onNotesAddChange}/>\n          <Button className=\"btn-secondary-default\" onClick={this.submitAdd}>Add</Button>\n          <Button className=\"btn-secondary-alert\" onClick={this.handleCloseAddModal}>Cancel</Button>\n\n        </ReactModal>\n      }\n      else if(this.state.showEditModal) {\n        modal =\n        <ReactModal\n          isOpen={this.state.showEditModal}\n          contentLabel=\"Confirm delete med modal\">\n          <h1>Edit a Medication</h1>\n          <label for=\"edit-med\">Medication (max 20 characters) </label>\n          <input class=\"input-default\" type=\"text\" name=\"edit-med\" onChange={this.onEditChange}/>\n          <Button className=\"btn-secondary-default\" onClick={this.submitEdit}>Edit</Button>\n          <Button className=\"btn-secondary-alert\" onClick={this.handleCloseEditModal}>Cancel</Button>\n        </ReactModal>\n      }\n      else if(this.state.showDeleteModal) {\n        modal =\n        <ReactModal\n          isOpen={this.state.showDeleteModal}\n          contentLabel=\"Confirm delete med modal\">\n          <p>Are you sure you want to delete {this.state.medSelected}?</p>\n          <Button className=\"btn-secondary-default\" onClick={this.submitConfirmDelete}>Accept</Button>\n          <Button className=\"btn-secondary-alert\" onClick={this.handleCloseDeleteModal}>Cancel</Button>\n        </ReactModal>\n      }\n      return (\n        <div>\n          <h1>Medications</h1>\n          {modal}\n          <ul>\n            {medList}\n          </ul>\n          <Button className=\"btn-primary-solid\" onClick={this.handleOpenAddModal}>Add Med</Button>\n        </div>\n      )\n    }\n  }\n\nexport default MedList;\n  "]},"metadata":{},"sourceType":"module"}