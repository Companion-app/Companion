{"ast":null,"code":"var _jsxFileName = \"/Users/szerena/Desktop/Companion/src/components/mood-list/MoodList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal';\n\nclass MoodList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userSession: Session.get('user'),\n      moods: {},\n      showAddModal: false,\n      showEditModal: false,\n      showDeleteModal: false,\n      moodSelected: '',\n      editValue: '',\n      addValue: ''\n    };\n    this.onAddChange = this.onAddChange.bind(this);\n    this.onEditChange = this.onEditChange.bind(this);\n    this.submitAdd = this.submitAdd.bind(this);\n    this.submitEdit = this.submitEdit.bind(this);\n    this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n    this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n    this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n    this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n    this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n    this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n    this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.userSession) {\n      axios.get('http://localhost:5000/get-moods', {\n        params: {\n          id: this.state.userSession['id']\n        },\n        withCredentials: true\n      }).then(res => this.setState({\n        moods: res.data.moods\n      }));\n    }\n  }\n\n  handleOpenAddModal() {\n    this.setState({\n      showAddModal: true\n    });\n  }\n\n  handleOpenEditModal(mood) {\n    this.setState({\n      showEditModal: true,\n      moodSelected: mood\n    });\n  }\n\n  handleOpenDeleteModal(mood) {\n    this.setState({\n      showDeleteModal: true,\n      moodSelected: mood\n    });\n  }\n\n  handleCloseAddModal() {\n    this.setState({\n      showAddModal: false\n    });\n  }\n\n  handleCloseEditModal() {\n    this.setState({\n      showEditModal: false\n    });\n  }\n\n  handleCloseDeleteModal() {\n    this.setState({\n      showDeleteModal: false\n    });\n  }\n\n  onAddChange(e) {\n    this.setState({\n      addValue: e.target.value\n    });\n  }\n\n  onEditChange(e) {\n    this.setState({\n      editValue: e.target.value\n    });\n  }\n\n  submitAdd() {\n    axios.post('http://localhost:5000/add-mood', {\n      id: this.state.userSession['id'],\n      mood: this.state.addValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      updatedMoods[this.state.addValue] = {};\n      this.setState(prevState => ({\n        showAddModal: false,\n        moods: { ...prevState.moods,\n          [this.state.addValue]: {}\n        }\n      }));\n    });\n  }\n\n  submitEdit() {\n    axios.put('http://localhost:5000/edit-mood', {\n      oldMood: this.state.moodSelected,\n      newMood: this.state.editValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      let temp = updatedMoods[this.state.moodSelected];\n      delete updatedMoods[this.state.moodSelected];\n      updatedMoods[this.state.editValue] = temp;\n      this.setState({\n        showEditModal: false,\n        moodSelected: '',\n        moods: updatedMoods\n      });\n    });\n  }\n\n  submitConfirmDelete() {\n    axios.post('http://localhost:5000/delete-mood', {\n      id: this.state.userSession['id'],\n      mood: this.state.moodSelected\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      delete updatedMoods[this.state.moodSelected];\n      this.setState({\n        showDeleteModal: false,\n        moodSelected: '',\n        moods: updatedMoods\n      });\n    });\n  }\n\n  render() {\n    let i = 0;\n    let moods = [];\n\n    for (let mood in this.state.moods) {\n      moods.push(mood);\n    }\n\n    let moodList = moods.map(mood => /*#__PURE__*/React.createElement(\"li\", {\n      key: i++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, mood, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.handleOpenEditModal(mood);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.handleOpenDeleteModal(mood);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Delete\")));\n    let modal;\n\n    if (this.state.showAddModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.state.showAddModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, \"Add a Mood\"), \"Mood (max 20 characters) \", /*#__PURE__*/React.createElement(\"input\", {\n        class: \"input-default\",\n        type: \"text\",\n        onChange: this.onAddChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 36\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn-secondary-default\",\n        onClick: this.submitAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn-secondary-alert\",\n        onClick: this.handleCloseAddModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    } else if (this.state.showEditModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.state.showEditModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, \"Edit a Mood\"), \"Mood (max 20 characters) \", /*#__PURE__*/React.createElement(\"input\", {\n        class: \"input-default\",\n        type: \"text\",\n        onChange: this.onEditChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 36\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn-secondary-default\",\n        onClick: this.submitEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn-secondary-alert\",\n        onClick: this.handleCloseEditModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    } else if (this.state.showDeleteModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        isOpen: this.state.showDeleteModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, \"Are you sure you want to delete \", this.state.moodSelected, \"?\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn-secondary-default\",\n        onClick: this.submitConfirmDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn-secondary-alert\",\n        onClick: this.handleCloseDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }, \"Cancel\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, \"Moods\"), modal, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, moodList), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn-primary-solid\",\n      onClick: this.handleOpenAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Add Mood\"));\n  }\n\n}\n\nexport default MoodList;","map":{"version":3,"sources":["/Users/szerena/Desktop/Companion/src/components/mood-list/MoodList.js"],"names":["React","axios","Session","ReactModal","MoodList","Component","constructor","state","userSession","get","moods","showAddModal","showEditModal","showDeleteModal","moodSelected","editValue","addValue","onAddChange","bind","onEditChange","submitAdd","submitEdit","submitConfirmDelete","handleOpenAddModal","handleCloseAddModal","handleOpenEditModal","handleOpenDeleteModal","handleCloseEditModal","handleCloseDeleteModal","componentDidMount","params","id","withCredentials","then","res","setState","data","mood","e","target","value","post","updatedMoods","prevState","put","oldMood","newMood","temp","render","i","push","moodList","map","modal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal';\n\n\nclass MoodList extends React.Component{\n    constructor(){\n      super()\n      this.state = {\n        userSession: Session.get('user'),\n        moods: {},\n        showAddModal: false,\n        showEditModal: false,\n        showDeleteModal: false,\n        moodSelected: '',\n        editValue: '',\n        addValue: ''\n      }\n      this.onAddChange = this.onAddChange.bind(this);\n      this.onEditChange = this.onEditChange.bind(this);\n      this.submitAdd = this.submitAdd.bind(this);\n      this.submitEdit = this.submitEdit.bind(this);\n      this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n      this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n      this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n      this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n      this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n      this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n      this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n    }\n  \n    componentDidMount(){\n      if(this.state.userSession) {\n        axios.get('http://localhost:5000/get-moods', {\n          params: { id: this.state.userSession['id'] },\n          withCredentials: true\n        }).then(res => this.setState({ moods: res.data.moods }))\n      }\n    }\n  \n    handleOpenAddModal() {\n      this.setState({\n        showAddModal: true\n      });\n    }\n  \n    handleOpenEditModal(mood) {\n      this.setState({\n        showEditModal: true,\n        moodSelected: mood\n      });\n    }\n  \n    handleOpenDeleteModal(mood) {\n      this.setState({\n        showDeleteModal: true,\n        moodSelected: mood\n      });\n    }\n  \n    handleCloseAddModal() {\n      this.setState({ showAddModal: false });\n    }\n  \n    handleCloseEditModal () {\n      this.setState({ showEditModal: false });\n    }\n  \n    handleCloseDeleteModal () {\n      this.setState({ showDeleteModal: false });\n    }\n  \n    onAddChange(e) {\n      this.setState({\n        addValue: e.target.value\n      })\n    }\n  \n    onEditChange(e) {\n      this.setState({\n        editValue: e.target.value\n      })\n    }\n  \n    submitAdd() {\n      axios.post('http://localhost:5000/add-mood', {id: this.state.userSession['id'], mood: this.state.addValue}, {withCredentials: true})\n      .then(res => {\n        let updatedMoods = this.state.moods;\n        updatedMoods[this.state.addValue] = {}\n        this.setState(prevState => ({\n          showAddModal: false,\n          moods: {\n            ...prevState.moods,\n            [this.state.addValue]: {}\n          }\n        }))\n      })\n    }\n  \n    submitEdit() {\n      axios.put('http://localhost:5000/edit-mood', {oldMood: this.state.moodSelected, newMood: this.state.editValue}, { withCredentials: true })\n        .then(res => {\n        let updatedMoods = this.state.moods;\n        let temp = updatedMoods[this.state.moodSelected]\n        delete updatedMoods[this.state.moodSelected]\n        updatedMoods[this.state.editValue] = temp\n        this.setState({\n          showEditModal: false,\n          moodSelected: '',\n          moods: updatedMoods\n        })\n      })\n    }\n  \n    submitConfirmDelete() {\n      axios.post('http://localhost:5000/delete-mood', {id: this.state.userSession['id'], mood: this.state.moodSelected}, { withCredentials: true })\n        .then((res) => {\n        let updatedMoods = this.state.moods\n        delete updatedMoods[this.state.moodSelected]\n        this.setState({\n          showDeleteModal: false,\n          moodSelected: '',\n          moods: updatedMoods\n        })\n      })\n    }\n  \n    render(){\n      let i =0\n      let moods = []\n      for(let mood in this.state.moods) {\n        moods.push(mood)\n      }\n      let moodList = moods.map((mood) =>\n        <li key={i++}>\n          {mood}\n          <button onClick={() => {this.handleOpenEditModal(mood)}}>Edit</button>\n          <button onClick={() => {this.handleOpenDeleteModal(mood)}}>Delete</button>\n        </li>)\n      let modal;\n      if(this.state.showAddModal) {\n        modal =\n        <ReactModal\n          isOpen={this.state.showAddModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <h1>Add a Mood</h1>\n          Mood (max 20 characters) <input class=\"input-default\" type=\"text\" onChange={this.onAddChange}/>\n          <button class=\"btn-secondary-default\" onClick={this.submitAdd}>Add</button>\n          <button class=\"btn-secondary-alert\" onClick={this.handleCloseAddModal}>Cancel</button>\n        </ReactModal>\n      }\n      else if(this.state.showEditModal) {\n        modal =\n        <ReactModal\n          isOpen={this.state.showEditModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <h1>Edit a Mood</h1>\n          Mood (max 20 characters) <input class=\"input-default\" type=\"text\" onChange={this.onEditChange}/>\n          <button class=\"btn-secondary-default\" onClick={this.submitEdit}>Edit</button>\n          <button class=\"btn-secondary-alert\" onClick={this.handleCloseEditModal}>Cancel</button>\n        </ReactModal>\n      }\n      else if(this.state.showDeleteModal) {\n        modal =\n        <ReactModal\n          isOpen={this.state.showDeleteModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <p>Are you sure you want to delete {this.state.moodSelected}?</p>\n          <button class=\"btn-secondary-default\" onClick={this.submitConfirmDelete}>Accept</button>\n          <button class=\"btn-secondary-alert\" onClick={this.handleCloseDeleteModal}>Cancel</button>\n        </ReactModal>\n      }\n      return (\n        <div>\n          <h1>Moods</h1>\n          {modal}\n          <ul>\n            {moodList}\n          </ul>\n          <button class=\"btn-primary-solid\" onClick={this.handleOpenAddModal}>Add Mood</button>\n        </div>\n      )\n    }\n  }\n\nexport default MoodList;\n  "]},"metadata":{},"sourceType":"module"}