{"ast":null,"code":"var _jsxFileName = \"/Users/szerena/Desktop/Companion/src/components/med-list/MedList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal'; // Styling\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport '../../styles/css/main.css';\nimport { IconContext } from 'react-icons';\nimport { FaTrash } from 'react-icons/fa';\n\nclass MedList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userSession: Session.get('user'),\n      meds: {},\n      showAddModal: false,\n      showEditModal: false,\n      showDeleteModal: false,\n      medSelected: '',\n      editValue: '',\n      addValue: '',\n      notesValue: '',\n      notesEditValue: ''\n    };\n    this.onAddChange = this.onAddChange.bind(this);\n    this.onNotesAddChange = this.onNotesAddChange.bind(this);\n    this.onEditChange = this.onEditChange.bind(this);\n    this.onNotesEditChange = this.onNotesEditChange.bind(this);\n    this.submitAdd = this.submitAdd.bind(this);\n    this.submitEdit = this.submitEdit.bind(this);\n    this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n    this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n    this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n    this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n    this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n    this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n    this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.userSession) {\n      axios.get('http://localhost:5000/get-meds', {\n        params: {\n          id: this.state.userSession['id']\n        },\n        withCredentials: true\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          meds: res.data.meds\n        });\n      });\n    }\n  }\n\n  handleOpenAddModal() {\n    this.setState({\n      showAddModal: true\n    });\n  }\n\n  handleOpenEditModal(med) {\n    this.setState({\n      showEditModal: true,\n      medSelected: med\n    });\n  }\n\n  handleOpenDeleteModal(med) {\n    this.setState({\n      showDeleteModal: true,\n      medSelected: med\n    });\n  }\n\n  handleCloseAddModal() {\n    this.setState({\n      showAddModal: false\n    });\n  }\n\n  handleCloseEditModal() {\n    this.setState({\n      showEditModal: false\n    });\n  }\n\n  handleCloseDeleteModal() {\n    this.setState({\n      showDeleteModal: false\n    });\n  }\n\n  onAddChange(e) {\n    this.setState({\n      addValue: e.target.value\n    });\n  }\n\n  onNotesAddChange(e) {\n    this.setState({\n      notesValue: e.target.value\n    });\n  }\n\n  onEditChange(e) {\n    this.setState({\n      editValue: e.target.value\n    });\n  }\n\n  onNotesEditChange(e) {\n    this.setState({\n      notesEditValue: e.target.value\n    });\n  }\n\n  submitAdd() {\n    axios.post('http://localhost:5000/add-med', {\n      id: this.state.userSession['id'],\n      med: this.state.addValue,\n      notes: this.state.notesValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMeds = this.state.meds;\n      updatedMeds[this.state.addValue] = {};\n      this.setState(prevState => ({\n        showAddModal: false,\n        meds: { ...prevState.meds,\n          [this.state.addValue]: this.state.notesValue\n        }\n      }));\n    });\n  }\n\n  submitEdit() {\n    axios.put('http://localhost:5000/edit-med', {\n      id: this.state.userSession['id'],\n      oldMed: this.state.medSelected,\n      newMed: this.state.editValue,\n      notes: this.state.notesEditValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMeds = this.state.meds;\n      let temp = updatedMeds[this.state.medSelected];\n      delete updatedMeds[this.state.medSelected]; // updatedMeds[this.state.editValue] = temp\n\n      updatedMeds[this.state.editValue] = this.state.notesEditValue;\n      this.setState({\n        showEditModal: false,\n        medSelected: '',\n        meds: updatedMeds\n      });\n    });\n  }\n\n  submitConfirmDelete() {\n    axios.post('http://localhost:5000/delete-med', {\n      id: this.state.userSession['id'],\n      med: this.state.medSelected\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMeds = this.state.meds;\n      delete updatedMeds[this.state.medSelected];\n      this.setState({\n        showDeleteModal: false,\n        medSelected: '',\n        meds: updatedMeds\n      });\n    });\n  }\n\n  render() {\n    let i = 0;\n    let meds = []; // console.log(this.state.meds)\n\n    for (let med in this.state.meds) {\n      meds.push(med);\n    }\n\n    let medList = meds.map(med => /*#__PURE__*/React.createElement(\"li\", {\n      key: i++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, med, this.state.meds[med], /*#__PURE__*/React.createElement(Button, {\n      className: \"hda-btn-secondary-edit\",\n      onClick: () => {\n        this.handleOpenEditModal(med);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"hda-btn-secondary-alert\",\n      onClick: () => {\n        this.handleOpenDeleteModal(med);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, \"Delete\")));\n    let modal;\n\n    if (this.state.showAddModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"hdt-ModalBacking\",\n        isOpen: this.state.showAddModal,\n        contentLabel: \"Confirm delete med modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"hda-DivHeading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, \"Add a Medication\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"hdo-FormBacking row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"col-12\",\n        for: \"add-med\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }, \"Medication Name \"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"col-12 hda-input-default\",\n        type: \"text\",\n        name: \"add-med\",\n        onChange: this.onAddChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"col-12\",\n        for: \"add-med\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }\n      }, \"Notes\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"col-12 hda-input-default\",\n        type: \"text\",\n        name: \"add-notes\",\n        onChange: this.onNotesAddChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"col-6 hda-btn-secondary-default\",\n        onClick: this.submitAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"col-6 hda-btn-secondary-alert\",\n        onClick: this.handleCloseAddModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }, \"Cancel\"))));\n    } else if (this.state.showEditModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"hdt-ModalBacking row\",\n        isOpen: this.state.showEditModal,\n        contentLabel: \"Confirm delete med modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"hda-DivHeading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, \"Edit a Medication\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"hdo-FormBacking row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"col-12\",\n        for: \"edit-med\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, \"Medication Name \"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"col-12\",\n        class: \"hda-input-default\",\n        type: \"text\",\n        name: \"edit-med\",\n        onChange: this.onEditChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"col-12\",\n        for: \"edit-med-notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, \"Notes\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"col-12\",\n        class: \"hda-input-default\",\n        type: \"text\",\n        name: \"edit-med-notes\",\n        onChange: this.onNotesEditChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"hda-btn-secondary-edit\",\n        onClick: this.submitEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"hda-btn-secondary-alert\",\n        onClick: this.handleCloseEditModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }, \"Cancel\"))));\n    } else if (this.state.showDeleteModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"hdt-ModalBacking\",\n        isOpen: this.state.showDeleteModal,\n        contentLabel: \"Confirm delete med modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconContext.Provider, {\n        value: {\n          size: '2rem',\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"hdo-DivBacking\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FaTrash, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, \"Are you sure you want to delete the emotion \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 64\n        }\n      }, this.state.medSelected), \"?\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hda-CenterText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"hda-btn-secondary-default\",\n        onClick: this.submitConfirmDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, \"Accept\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"hda-btn-secondary-alert\",\n        onClick: this.handleCloseDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, \"Cancel\")))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hdo-DivBacking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, \"Medications\"), modal, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, medList), /*#__PURE__*/React.createElement(Button, {\n      className: \"hda-btn-primary-outline\",\n      onClick: this.handleOpenAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, \"Add Med\"));\n  }\n\n}\n\nexport default MedList;","map":{"version":3,"sources":["/Users/szerena/Desktop/Companion/src/components/med-list/MedList.js"],"names":["React","axios","Session","ReactModal","Container","Row","Col","Button","IconContext","FaTrash","MedList","Component","constructor","state","userSession","get","meds","showAddModal","showEditModal","showDeleteModal","medSelected","editValue","addValue","notesValue","notesEditValue","onAddChange","bind","onNotesAddChange","onEditChange","onNotesEditChange","submitAdd","submitEdit","submitConfirmDelete","handleOpenAddModal","handleCloseAddModal","handleOpenEditModal","handleOpenDeleteModal","handleCloseEditModal","handleCloseDeleteModal","componentDidMount","params","id","withCredentials","then","res","console","log","setState","data","med","e","target","value","post","notes","updatedMeds","prevState","put","oldMed","newMed","temp","render","i","push","medList","map","modal","size","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal';\n\n// Styling\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport '../../styles/css/main.css';\n\nimport { IconContext } from 'react-icons';\nimport { FaTrash } from 'react-icons/fa';\n\n\n\nclass MedList extends React.Component{\n    constructor(){\n      super()\n      this.state = {\n        userSession: Session.get('user'),\n        meds: {},\n        showAddModal: false,\n        showEditModal: false,\n        showDeleteModal: false,\n        medSelected: '',\n        editValue: '',\n        addValue: '',\n        notesValue: '',\n        notesEditValue: ''\n      }\n      this.onAddChange = this.onAddChange.bind(this);\n      this.onNotesAddChange = this.onNotesAddChange.bind(this);\n      this.onEditChange = this.onEditChange.bind(this);\n      this.onNotesEditChange = this.onNotesEditChange.bind(this);\n      this.submitAdd = this.submitAdd.bind(this);\n      this.submitEdit = this.submitEdit.bind(this);\n      this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n      this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n      this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n      this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n      this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n      this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n      this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n    }\n  \n    componentDidMount(){\n      if(this.state.userSession) {\n        axios.get('http://localhost:5000/get-meds', {\n          params: { id: this.state.userSession['id'] },\n          withCredentials: true\n\n        }).then(res => {\n          console.log(res)\n          this.setState({ \n            meds: res.data.meds \n          })\n        })\n      }\n    }\n  \n    handleOpenAddModal() {\n      this.setState({\n        showAddModal: true\n      });\n    }\n  \n    handleOpenEditModal(med) {\n      this.setState({\n        showEditModal: true,\n        medSelected: med\n      });\n    }\n  \n    handleOpenDeleteModal(med) {\n      this.setState({\n        showDeleteModal: true,\n        medSelected: med\n      });\n    }\n  \n    handleCloseAddModal() {\n      this.setState({ showAddModal: false });\n    }\n  \n    handleCloseEditModal () {\n      this.setState({ showEditModal: false });\n    }\n  \n    handleCloseDeleteModal () {\n      this.setState({ showDeleteModal: false });\n    }\n  \n    onAddChange(e) {\n      this.setState({\n        addValue: e.target.value\n      })\n    }\n\n    onNotesAddChange(e){\n      this.setState({\n        notesValue: e.target.value\n      })\n    }\n  \n    onEditChange(e) {\n      this.setState({\n        editValue: e.target.value\n      })\n    }\n\n    onNotesEditChange(e) {\n      this.setState({\n        notesEditValue: e.target.value\n      })\n    }\n\n  \n    submitAdd() {\n      axios.post('http://localhost:5000/add-med', \n      {id: this.state.userSession['id'], med: this.state.addValue, notes: this.state.notesValue},\n      {withCredentials: true})\n      .then(res => {\n        let updatedMeds = this.state.meds;\n        updatedMeds[this.state.addValue] = {}\n        this.setState(prevState => ({\n          showAddModal: false,\n          meds: {\n            ...prevState.meds,\n            [this.state.addValue]: this.state.notesValue\n          }\n        }))\n      })\n    }\n  \n    submitEdit() {\n      axios.put('http://localhost:5000/edit-med', {id: this.state.userSession['id'], oldMed: this.state.medSelected, newMed: this.state.editValue, notes: this.state.notesEditValue}, { withCredentials: true })\n        .then(res => {\n        let updatedMeds = this.state.meds;\n        let temp = updatedMeds[this.state.medSelected]\n        delete updatedMeds[this.state.medSelected]\n        // updatedMeds[this.state.editValue] = temp\n        updatedMeds[this.state.editValue] = this.state.notesEditValue\n\n        this.setState({\n          showEditModal: false,\n          medSelected: '',\n          meds: updatedMeds\n        })\n      })\n    }\n  \n    submitConfirmDelete() {\n      axios.post('http://localhost:5000/delete-med', {id: this.state.userSession['id'], med: this.state.medSelected}, { withCredentials: true })\n        .then((res) => {\n        let updatedMeds = this.state.meds\n        delete updatedMeds[this.state.medSelected]\n        this.setState({\n          showDeleteModal: false,\n          medSelected: '',\n          meds: updatedMeds\n        })\n      })\n    }\n  \n    render(){\n      let i =0\n      let meds = []\n      // console.log(this.state.meds)\n      for(let med in this.state.meds) {\n        meds.push(med)\n      }\n      let medList = meds.map((med) =>\n        <li key={i++}>\n          {med}\n          {this.state.meds[med]}\n          <Button className=\"hda-btn-secondary-edit\" onClick={() => {this.handleOpenEditModal(med)}}>Edit</Button>\n          <Button className=\"hda-btn-secondary-alert\" onClick={() => {this.handleOpenDeleteModal(med)}}>Delete</Button>\n        </li>)\n      let modal;\n      if(this.state.showAddModal) {\n        modal =\n        <ReactModal className=\"hdt-ModalBacking\"\n          isOpen={this.state.showAddModal}\n          contentLabel=\"Confirm delete med modal\">\n          <h1 className=\"hda-DivHeading\">Add a Medication</h1>\n          <form className=\"hdo-FormBacking row\">\n            <div>\n              <label className=\"col-12\" for=\"add-med\">Medication Name </label>\n              <input className=\"col-12 hda-input-default\" type=\"text\" name=\"add-med\" onChange={this.onAddChange}/>\n              <label className=\"col-12\" for=\"add-med\">Notes</label>\n              <input className=\"col-12 hda-input-default\" type=\"text\" name=\"add-notes\" onChange={this.onNotesAddChange}/>\n            </div>\n            <div>\n              <Button className=\"col-6 hda-btn-secondary-default\" onClick={this.submitAdd}>Add</Button>\n              <Button className=\"col-6 hda-btn-secondary-alert\" onClick={this.handleCloseAddModal}>Cancel</Button>\n            </div>\n          </form>\n        </ReactModal>\n      }\n      else if(this.state.showEditModal) {\n        modal =\n        <ReactModal className=\"hdt-ModalBacking row\"\n          isOpen={this.state.showEditModal}\n          contentLabel=\"Confirm delete med modal\">\n          <h1 className=\"hda-DivHeading\">Edit a Medication</h1>\n          <form className=\"hdo-FormBacking row\">\n            <div>\n              <label className=\"col-12\" for=\"edit-med\">Medication Name </label>\n              <input className=\"col-12\" class=\"hda-input-default\" type=\"text\" name=\"edit-med\" onChange={this.onEditChange}/>\n              <label className=\"col-12\" for=\"edit-med-notes\">Notes</label>\n              <input className=\"col-12\" class=\"hda-input-default\" type=\"text\" name=\"edit-med-notes\" onChange={this.onNotesEditChange}/>\n            </div>  \n            <div>       \n              <Button className=\"hda-btn-secondary-edit\" onClick={this.submitEdit}>Edit</Button>\n              <Button className=\"hda-btn-secondary-alert\" onClick={this.handleCloseEditModal}>Cancel</Button>\n            </div>  \n          </form>\n        </ReactModal>\n      }\n      else if(this.state.showDeleteModal) {\n        modal =\n        <ReactModal className=\"hdt-ModalBacking\"\n          isOpen={this.state.showDeleteModal}\n          contentLabel=\"Confirm delete med modal\">\n          <IconContext.Provider value={{size: '2rem', color: 'black'}}>\n            <form  className=\"hdo-DivBacking\">\n              <div className=\"Text\">\n                <FaTrash/>\n                <p>Are you sure you want to delete the emotion <strong>{this.state.medSelected}</strong>?</p>\n              </div>\n              <div className=\"hda-CenterText\">\n                <Button className=\"hda-btn-secondary-default\" onClick={this.submitConfirmDelete}>Accept</Button>\n                <Button className=\"hda-btn-secondary-alert\" onClick={this.handleCloseDeleteModal}>Cancel</Button>\n              </div>\n            </form>\n          </IconContext.Provider>\n        </ReactModal>\n      }\n      return (\n        <div className=\"hdo-DivBacking\">\n          <h1>Medications</h1>\n          {modal}\n\n          <ul>\n            {medList}\n          </ul>\n\n          <Button className=\"hda-btn-primary-outline\" onClick={this.handleOpenAddModal}>Add Med</Button>\n        </div>\n      )\n    }\n  }\n\nexport default MedList;\n  "]},"metadata":{},"sourceType":"module"}