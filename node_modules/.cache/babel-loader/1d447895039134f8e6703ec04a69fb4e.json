{"ast":null,"code":"var _jsxFileName = \"/Users/alenakim/Documents/GitHub/Companion/src/components/mood-list/MoodList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal';\nimport SwipeableViews from 'react-swipeable-views'; // Styling\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Button, Form, Dropdown } from 'react-bootstrap';\nimport Slider from '@material-ui/core/Slider';\nimport Alert from '@material-ui/lab/Alert';\nimport '../../styles/css/main.css';\nimport { IconContext } from 'react-icons';\nimport { FaTrash } from 'react-icons/fa';\n\nclass MoodList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userSession: Session.get('user'),\n      moods: {},\n      showAddModal: false,\n      showEditModal: false,\n      showDeleteModal: false,\n      showIntensityModal: false,\n      moodSelected: '',\n      editValue: '',\n      addValue: '',\n      intensity: {},\n      showAlert: false,\n      swipeIndex: 0\n    };\n    this.onAddChange = this.onAddChange.bind(this);\n    this.onEditChange = this.onEditChange.bind(this);\n    this.submitAdd = this.submitAdd.bind(this);\n    this.submitEdit = this.submitEdit.bind(this);\n    this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n    this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n    this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n    this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n    this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n    this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n    this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n    this.handleOpenIntensityModal = this.handleOpenIntensityModal.bind(this);\n    this.handleCloseIntensityModal = this.handleCloseIntensityModal.bind(this);\n    this.onIntensityChange = this.onIntensityChange.bind(this);\n    this.handleSubmitIntensity = this.handleSubmitIntensity.bind(this);\n    this.onSwipeChange = this.onSwipeChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.userSession) {\n      axios.get('http://localhost:5000/get-moods', {\n        params: {\n          id: this.state.userSession['id']\n        },\n        withCredentials: true\n      }).then(res => this.setState({\n        moods: res.data.moods\n      }));\n    }\n  }\n\n  handleOpenAddModal() {\n    this.setState({\n      showAddModal: true\n    });\n  }\n\n  handleOpenEditModal(mood) {\n    this.setState({\n      showEditModal: true,\n      moodSelected: mood\n    });\n  }\n\n  handleOpenDeleteModal(mood) {\n    this.setState({\n      showDeleteModal: true,\n      moodSelected: mood\n    });\n  }\n\n  handleCloseAddModal() {\n    this.setState({\n      showAddModal: false\n    });\n  }\n\n  handleCloseEditModal() {\n    this.setState({\n      showEditModal: false\n    });\n  }\n\n  handleCloseDeleteModal() {\n    this.setState({\n      showDeleteModal: false\n    });\n  }\n\n  onAddChange(e) {\n    this.setState({\n      addValue: e.target.value\n    });\n  }\n\n  onEditChange(e) {\n    this.setState({\n      editValue: e.target.value\n    });\n  }\n\n  submitAdd() {\n    axios.post('http://localhost:5000/add-mood', {\n      id: this.state.userSession['id'],\n      mood: this.state.addValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      updatedMoods[this.state.addValue] = {};\n      this.setState(prevState => ({\n        showAddModal: false,\n        moods: { ...prevState.moods,\n          [this.state.addValue]: {}\n        }\n      }));\n    });\n  }\n\n  submitEdit() {\n    axios.put('http://localhost:5000/edit-mood', {\n      oldMood: this.state.moodSelected,\n      newMood: this.state.editValue\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      let temp = updatedMoods[this.state.moodSelected];\n      delete updatedMoods[this.state.moodSelected];\n      updatedMoods[this.state.editValue] = temp;\n      this.setState({\n        showEditModal: false,\n        moodSelected: '',\n        moods: updatedMoods\n      });\n    });\n  }\n\n  submitConfirmDelete() {\n    axios.post('http://localhost:5000/delete-mood', {\n      id: this.state.userSession['id'],\n      mood: this.state.moodSelected\n    }, {\n      withCredentials: true\n    }).then(res => {\n      let updatedMoods = this.state.moods;\n      delete updatedMoods[this.state.moodSelected];\n      this.setState({\n        showDeleteModal: false,\n        moodSelected: '',\n        moods: updatedMoods\n      });\n    });\n  }\n\n  handleOpenIntensityModal(mood) {\n    this.setState({\n      showIntensityModal: true,\n      moodSelected: mood\n    });\n  }\n\n  handleCloseIntensityModal(e) {\n    this.setState({\n      showIntensityModal: false\n    });\n  }\n\n  handleSubmitIntensity() {\n    axios.post('http://localhost:5000/add-logentry', {\n      id: this.state.userSession['id'],\n      intensity: this.state.intensity\n    }, {\n      withCredentials: true\n    }).then(res => {\n      this.setState({\n        showAlert: true,\n        intensity: {}\n      });\n    });\n  }\n\n  onIntensityChange(e, value) {\n    this.setState(prevState => ({\n      intensity: { ...prevState.intensity,\n        [`${this.state.moodSelected}`]: value\n      }\n    }));\n    console.log(this.state.intensity);\n  }\n\n  onSwipeChange(index, indexLatest, meta) {\n    this.setState({\n      swipeIndex: index\n    });\n  }\n\n  render() {\n    let i = 0;\n    let moods = [];\n\n    for (let mood in this.state.moods) {\n      moods.push(mood);\n    }\n\n    if (this.state.swipeIndex == 1) {\n      this.setState({\n        swipeIndex: 0\n      });\n    }\n\n    let moodList = moods.map(mood => /*#__PURE__*/React.createElement(\"li\", {\n      key: i++,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SwipeableViews, {\n      enableMouseEvents: true,\n      onChangeIndex: this.onSwipeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-primary-outline\",\n      onClick: () => {\n        this.handleOpenIntensityModal(mood);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, mood)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-secondary-edit\",\n      onClick: () => {\n        this.handleOpenEditModal(mood);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-secondary-alert\",\n      onClick: () => {\n        this.handleOpenDeleteModal(mood);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, \"Delete\")))));\n    let modal;\n\n    if (this.state.showAddModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"modal-backing\",\n        isOpen: this.state.showAddModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"div-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      }, \"Add a Mood\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-backing row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"add-mood\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }\n      }, \"Mood (max 20 characters) \"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"input-default\",\n        type: \"text\",\n        name: \"add-mood\",\n        onChange: this.onAddChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }\n      }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseAddModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, \"Cancel\"))));\n    } else if (this.state.showEditModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"modal-backing\",\n        isOpen: this.state.showEditModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"div-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }\n      }, \"Edit a Mood\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"form-backing row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"edit-mood\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }\n      }, \"Mood (max 20 characters) \"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"input-default\",\n        type: \"text\",\n        name: \"edit-mood\",\n        onChange: this.onEditChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseEditModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      }, \"Cancel\"))));\n    } else if (this.state.showDeleteModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"modal-backing\",\n        isOpen: this.state.showDeleteModal,\n        contentLabel: \"Confirm delete mood modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconContext.Provider, {\n        value: {\n          size: '2rem',\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"div-backing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FaTrash, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }\n      }, \"Are you sure you want to delete \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 50\n        }\n      }, this.state.moodSelected), \"?\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.submitConfirmDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }, \"Accept\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-alert\",\n        onClick: this.handleCloseDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      }, \"Cancel\")))));\n    } else if (this.state.showIntensityModal) {\n      modal = /*#__PURE__*/React.createElement(ReactModal, {\n        className: \"modal-backing\",\n        isOpen: this.state.showIntensityModal,\n        contentLabel: \"Set Intensity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }\n      }, this.state.moodSelected), /*#__PURE__*/React.createElement(Slider, {\n        defaultValue: -1 // getAriaValueText={valuetext}\n        ,\n        \"aria-labelledby\": \"discrete-slider\",\n        valueLabelDisplay: \"on\",\n        step: 1,\n        marks: true,\n        min: 0,\n        max: 5,\n        onChange: this.onIntensityChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-secondary-default\",\n        onClick: this.handleCloseIntensityModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, \"Set\"));\n    }\n\n    let showSubmit;\n\n    if (Object.keys(this.state.intensity).length > 0) {\n      showSubmit = /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-primary-solid\",\n        onClick: this.handleSubmitIntensity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 22\n        }\n      }, \"LOG\");\n    }\n\n    let alert;\n\n    if (this.state.showAlert) {\n      alert = /*#__PURE__*/React.createElement(Alert, {\n        severity: \"success\",\n        onClose: () => {\n          this.setState({\n            showAlert: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }\n      }, \"Your moods have been successfully logged!\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-backing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    }, \"Moods\"), modal, alert, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, moodList), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-primary-outline\",\n      onClick: this.handleOpenAddModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }\n    }, \"+\"), showSubmit);\n  }\n\n}\n\nexport default MoodList;","map":{"version":3,"sources":["/Users/alenakim/Documents/GitHub/Companion/src/components/mood-list/MoodList.js"],"names":["React","axios","Session","ReactModal","SwipeableViews","Container","Row","Col","Button","Form","Dropdown","Slider","Alert","IconContext","FaTrash","MoodList","Component","constructor","state","userSession","get","moods","showAddModal","showEditModal","showDeleteModal","showIntensityModal","moodSelected","editValue","addValue","intensity","showAlert","swipeIndex","onAddChange","bind","onEditChange","submitAdd","submitEdit","submitConfirmDelete","handleOpenAddModal","handleCloseAddModal","handleOpenEditModal","handleOpenDeleteModal","handleCloseEditModal","handleCloseDeleteModal","handleOpenIntensityModal","handleCloseIntensityModal","onIntensityChange","handleSubmitIntensity","onSwipeChange","componentDidMount","params","id","withCredentials","then","res","setState","data","mood","e","target","value","post","updatedMoods","prevState","put","oldMood","newMood","temp","console","log","index","indexLatest","meta","render","i","push","moodList","map","modal","size","color","showSubmit","Object","keys","length","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Session from 'react-session-api';\nimport ReactModal from 'react-modal';\nimport SwipeableViews from 'react-swipeable-views';\n\n// Styling\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, Row, Col, Button, Form, Dropdown } from 'react-bootstrap';\nimport Slider from '@material-ui/core/Slider';\nimport Alert from '@material-ui/lab/Alert'\nimport '../../styles/css/main.css';\nimport { IconContext } from 'react-icons';\nimport { FaTrash } from 'react-icons/fa';\n\nclass MoodList extends React.Component{\n    constructor(){\n      super()\n      this.state = {\n        userSession: Session.get('user'),\n        moods: {},\n        showAddModal: false,\n        showEditModal: false,\n        showDeleteModal: false,\n        showIntensityModal: false,\n        moodSelected: '',\n        editValue: '',\n        addValue: '',\n        intensity: {},\n        showAlert: false,\n        swipeIndex: 0\n      }\n      this.onAddChange = this.onAddChange.bind(this);\n      this.onEditChange = this.onEditChange.bind(this);\n      this.submitAdd = this.submitAdd.bind(this);\n      this.submitEdit = this.submitEdit.bind(this);\n      this.submitConfirmDelete = this.submitConfirmDelete.bind(this);\n      this.handleOpenAddModal = this.handleOpenAddModal.bind(this);\n      this.handleCloseAddModal = this.handleCloseAddModal.bind(this);\n      this.handleOpenEditModal = this.handleOpenEditModal.bind(this);\n      this.handleOpenDeleteModal = this.handleOpenDeleteModal.bind(this);\n      this.handleCloseEditModal = this.handleCloseEditModal.bind(this);\n      this.handleCloseDeleteModal = this.handleCloseDeleteModal.bind(this);\n      this.handleOpenIntensityModal = this.handleOpenIntensityModal.bind(this);\n      this.handleCloseIntensityModal = this.handleCloseIntensityModal.bind(this);\n      this.onIntensityChange = this.onIntensityChange.bind(this);\n      this.handleSubmitIntensity = this.handleSubmitIntensity.bind(this);\n      this.onSwipeChange = this.onSwipeChange.bind(this);\n    }\n    \n  \n    componentDidMount(){\n      if(this.state.userSession) {\n        axios.get('http://localhost:5000/get-moods', {\n          params: { id: this.state.userSession['id'] },\n          withCredentials: true\n        }).then(res => this.setState({ moods: res.data.moods }))\n      }\n    }\n  \n    handleOpenAddModal() {\n      this.setState({\n        showAddModal: true\n      });\n    }\n  \n    handleOpenEditModal(mood) {\n      this.setState({\n        showEditModal: true,\n        moodSelected: mood\n      });\n    }\n  \n    handleOpenDeleteModal(mood) {\n      this.setState({\n        showDeleteModal: true,\n        moodSelected: mood\n      });\n    }\n  \n    handleCloseAddModal() {\n      this.setState({ showAddModal: false });\n    }\n  \n    handleCloseEditModal () {\n      this.setState({ showEditModal: false });\n    }\n  \n    handleCloseDeleteModal () {\n      this.setState({ showDeleteModal: false });\n    }\n  \n    onAddChange(e) {\n      this.setState({\n        addValue: e.target.value\n      })\n    }\n  \n    onEditChange(e) {\n      this.setState({\n        editValue: e.target.value\n      })\n    }\n  \n    submitAdd() {\n      axios.post('http://localhost:5000/add-mood', {id: this.state.userSession['id'], mood: this.state.addValue}, {withCredentials: true})\n      .then(res => {\n        let updatedMoods = this.state.moods;\n        updatedMoods[this.state.addValue] = {}\n        this.setState(prevState => ({\n          showAddModal: false,\n          moods: {\n            ...prevState.moods,\n            [this.state.addValue]: {}\n          }\n        }))\n      })\n    }\n  \n    submitEdit() {\n      axios.put('http://localhost:5000/edit-mood', {oldMood: this.state.moodSelected, newMood: this.state.editValue}, { withCredentials: true })\n        .then(res => {\n        let updatedMoods = this.state.moods;\n        let temp = updatedMoods[this.state.moodSelected]\n        delete updatedMoods[this.state.moodSelected]\n        updatedMoods[this.state.editValue] = temp\n        this.setState({\n          showEditModal: false,\n          moodSelected: '',\n          moods: updatedMoods\n        })\n      })\n    }\n  \n    submitConfirmDelete() {\n      axios.post('http://localhost:5000/delete-mood', {id: this.state.userSession['id'], mood: this.state.moodSelected}, { withCredentials: true })\n        .then((res) => {\n        let updatedMoods = this.state.moods\n        delete updatedMoods[this.state.moodSelected]\n        this.setState({\n          showDeleteModal: false,\n          moodSelected: '',\n          moods: updatedMoods\n        })\n      })\n    }\n\n    handleOpenIntensityModal(mood){\n      this.setState({\n        showIntensityModal: true,\n        moodSelected: mood\n      });\n    }\n\n    handleCloseIntensityModal (e){\n      this.setState({ \n        showIntensityModal: false \n      });\n    }\n\n    handleSubmitIntensity(){\n      axios.post('http://localhost:5000/add-logentry', \n        {id: this.state.userSession['id'], intensity: this.state.intensity}, \n        { withCredentials: true }\n      ).then(res => {\n        this.setState({\n          showAlert : true,\n          intensity: {}\n        })\n\n      })\n    }\n\n    onIntensityChange(e, value) {\n      this.setState(prevState => ({\n        intensity: {\n          ...prevState.intensity,\n          [`${this.state.moodSelected}`]: value\n        }\n      }))\n      console.log(this.state.intensity)\n    }\n\n    onSwipeChange(index, indexLatest, meta){\n      this.setState({\n        swipeIndex: index\n      })\n    }\n  \n    render(){\n      let i =0\n      let moods = []\n      for(let mood in this.state.moods) {\n        moods.push(mood)\n      }\n\n      if(this.state.swipeIndex == 1){\n        this.setState({\n          swipeIndex : 0\n        })\n      }\n\n\n      let moodList = moods.map((mood) =>\n        <li key={i++}>\n          <SwipeableViews enableMouseEvents onChangeIndex={this.onSwipeChange}>\n            <div>\n              <Button className=\"btn-primary-outline\" onClick={()=> {this.handleOpenIntensityModal(mood)}}>\n                {mood}\n              </Button>\n            </div>\n            <div>\n              <Button className=\"btn-secondary-edit\" onClick={() => {this.handleOpenEditModal(mood)}}>\n                Edit\n              </Button>\n              <Button className=\"btn-secondary-alert\" onClick={() => {this.handleOpenDeleteModal(mood)}}>\n                Delete\n              </Button>\n            </div>\n          </SwipeableViews>\n        </li>)\n      let modal;\n      if(this.state.showAddModal) {\n        modal =\n        <ReactModal className=\"modal-backing\"\n          isOpen={this.state.showAddModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <h1 className=\"div-heading\">Add a Mood</h1>\n          <form className=\"form-backing row\">\n            <div>\n              <label htmlFor=\"add-mood\">Mood (max 20 characters) </label>\n              <input className=\"input-default\" type=\"text\" name=\"add-mood\" onChange={this.onAddChange}/>\n            </div>\n            <div>\n              <Button className=\"btn-secondary-default\" onClick={this.submitAdd}>Add</Button>\n              <Button className=\"btn-secondary-alert\" onClick={this.handleCloseAddModal}>Cancel</Button>\n            </div>\n          </form>\n        </ReactModal>\n      }\n      else if(this.state.showEditModal) {\n        modal =\n        <ReactModal className=\"modal-backing\"\n          isOpen={this.state.showEditModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <h1 className=\"div-heading\">Edit a Mood</h1>\n          <form className=\"form-backing row\">\n            <div>\n              <label htmlFor=\"edit-mood\">Mood (max 20 characters) </label>\n              <input className=\"input-default\" type=\"text\" name=\"edit-mood\" onChange={this.onEditChange}/>\n            </div>\n            <div>\n              <Button className=\"btn-secondary-default\" onClick={this.submitEdit}>Edit</Button>\n              <Button className=\"btn-secondary-alert\" onClick={this.handleCloseEditModal}>Cancel</Button>\n            </div>\n          </form>\n        </ReactModal>\n      }\n      else if(this.state.showDeleteModal) {\n        modal =\n        <ReactModal className=\"modal-backing\"\n          isOpen={this.state.showDeleteModal}\n          contentLabel=\"Confirm delete mood modal\">\n          <IconContext.Provider value={{size: '2rem', color: 'black'}}>\n          <form  className=\"div-backing\">\n            <div className=\"center\">\n              <FaTrash/>\n              <p>Are you sure you want to delete <strong>{this.state.moodSelected}</strong>?</p>\n            </div>\n            <div className=\"center\">\n              <Button className=\"btn-secondary-default\" onClick={this.submitConfirmDelete}>Accept</Button>\n              <Button className=\"btn-secondary-alert\" onClick={this.handleCloseDeleteModal}>Cancel</Button>\n            </div>\n          </form>\n          </IconContext.Provider>\n        </ReactModal>\n      }\n      else if(this.state.showIntensityModal) {\n        modal = \n        <ReactModal className=\"modal-backing\"\n          isOpen={this.state.showIntensityModal}\n          contentLabel=\"Set Intensity\">\n          <p>{this.state.moodSelected}</p>\n          <Slider\n            defaultValue={-1}\n            // getAriaValueText={valuetext}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"on\"\n            step={1}\n            marks\n            min={0}\n            max={5}\n            onChange={this.onIntensityChange}\n          />\n          <Button className=\"btn-secondary-default\" onClick={this.handleCloseIntensityModal}>Set</Button>\n        </ReactModal>\n      }\n      let showSubmit;\n      if (Object.keys(this.state.intensity).length > 0){\n        showSubmit = <Button className=\"btn-primary-solid\" onClick={this.handleSubmitIntensity}>LOG</Button>\n\n      }\n\n      let alert;\n      if(this.state.showAlert){\n        alert = \n        <Alert severity=\"success\" onClose={()=>{ this.setState({showAlert: false}) }}>\n          Your moods have been successfully logged!\n        </Alert>\n      }\n    \n      return (\n        <div className=\"div-backing\">\n          <h1>Moods</h1>\n          {modal}\n          {alert}\n          <ul className=\"list-unstyled\">\n            {moodList}\n          </ul>\n          <Button className=\"btn-primary-outline\" onClick={this.handleOpenAddModal}>+</Button>\n          {showSubmit}\n        </div>\n      )\n    }\n  }\n\nexport default MoodList;\n  "]},"metadata":{},"sourceType":"module"}